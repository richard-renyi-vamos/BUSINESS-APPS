# Import necessary libraries
import pandas as pd

# Define function to calculate business efficiency metrics
def business_efficiency_analysis(revenue, expenses, assets, liabilities, num_employees):
    """
    Analyzes business efficiency based on key metrics.

    Parameters:
    - revenue (float): Total revenue generated by the company.
    - expenses (float): Total expenses incurred by the company.
    - assets (float): Total assets of the company.
    - liabilities (float): Total liabilities of the company.
    - num_employees (int): Total number of employees in the company.

    Returns:
    - dict: A dictionary with calculated efficiency metrics.
    """
    # Calculate profit margin
    profit = revenue - expenses
    profit_margin = (profit / revenue) * 100 if revenue else 0  # percentage

    # Calculate asset turnover ratio
    asset_turnover = revenue / assets if assets else 0

    # Calculate return on assets (ROA)
    return_on_assets = (profit / assets) * 100 if assets else 0  # percentage

    # Calculate debt-to-assets ratio (to assess leverage)
    debt_to_assets = (liabilities / assets) * 100 if assets else 0  # percentage

    # Calculate revenue per employee
    revenue_per_employee = revenue / num_employees if num_employees else 0

    # Compile results into a dictionary
    efficiency_metrics = {
        'Profit Margin (%)': profit_margin,
        'Asset Turnover Ratio': asset_turnover,
        'Return on Assets (ROA) (%)': return_on_assets,
        'Debt to Assets Ratio (%)': debt_to_assets,
        'Revenue per Employee': revenue_per_employee
    }

    return efficiency_metrics

# Example usage with sample data
# (You can replace these values with actual data for analysis)
revenue = 1000000  # e.g., 1 million in revenue
expenses = 700000  # e.g., 700,000 in expenses
assets = 500000    # e.g., 500,000 in assets
liabilities = 200000  # e.g., 200,000 in liabilities
num_employees = 50  # e.g., 50 employees

# Analyze the company's business efficiency
metrics = business_efficiency_analysis(revenue, expenses, assets, liabilities, num_employees)

# Convert metrics to a DataFrame for better readability
metrics_df = pd.DataFrame(metrics.items(), columns=['Metric', 'Value'])
print(metrics_df)
